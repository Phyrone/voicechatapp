name: Commit Server

on:
  push:
    branches-ignore:
      - 'renovate/**'
  pull_request: {}

jobs:
  build_server:
    strategy:
      matrix:
        JVM_VERSION:
          - 11
          - 17
          - 20
    name: Build Server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK ${{ matrix.JVM_VERSION }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.JVM_VERSION }}
          cache: 'gradle'
      - uses: gradle/wrapper-validation-action@v1
      - name: Check with Gradle
        run: ./gradlew check
      - name: Build with Gradle
        run: ./gradlew build
      - name: Run Tests with Gradle
        run: ./gradlew test
      - name: Stop Gradle Daemon
        run: ./gradlew --stop
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        if: matrix.JVM_VERSION == 11
        with:
          name: server
          if-no-files-found: error
          path: | 
            server/build/libs/*.jar

  build_server_docs:
    name: Build Server Docs
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
          cache: 'gradle'
      - name: Create Docs
        run: ./gradlew dokkaHtmlMultiModule
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: server-docs
          if-no-files-found: error
          path: | 
            build/dokka/htmlMultiModule

  build_client_web:
    name: Build Client Web      
    runs-on: ubuntu-latest
    defaults:
      run:
          working-directory: ./client
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'yarn'
          cache-dependency-path: 'client/yarn.lock'
      - name: Install Dependencies
        run: yarn install
      - name: Build
        run: yarn build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: client-web
          if-no-files-found: error
          path: | 
            client/dist

      
  pages:
    name: Publish to GitHub Pages
    permissions:
      pages: write
      id-token: write
    if: github.ref == 'refs/heads/main'
    needs:
      - build_client_web
      - build_server_docs
    runs-on: ubuntu-latest
    environment:
      name: client-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Download Client Web
        uses: actions/download-artifact@v3
        with:
          name: client-web
          path: dist
      - name: Download Server Docs
        uses: actions/download-artifact@v3
        with:
          name: server-docs
          path: dist/docs
      - name: Upload for GitHub Pages
        uses: actions/upload-pages-artifact@v1
        with:
          name: client-gh-pages
          path: dist
      - name: Publish to GitHub Pages
        uses: actions/deploy-pages@v2
        id: deploy
        with:
          artifact_name: client-gh-pages


  build_client_tauri:
    strategy:
      matrix:
        platform:
          - ubuntu-20.04
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.platform }}
    defaults:
      run:
          working-directory: ./client
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      # get the build artifacts from the previous job
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'yarn'
          cache-dependency-path: 'client/yarn.lock'
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Add Arm64 target
        if: matrix.platform == 'macos-latest'
        run: rustup target add aarch64-apple-darwin
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './client/src-tauri -> target'
      - name: Install Yarn Dependencies
        run: yarn install
      - name: Build 
        if: matrix.platform != 'macos-latest'
        run: yarn tauri build
      - name: Build (macos universal)
        if: matrix.platform == 'macos-latest'
        run: yarn tauri build --target universal-apple-darwin
      #TODO: linux, windows arm64 support
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: client-${{ matrix.platform }}
          if-no-files-found: error
          path: | 
            client/src-tauri/target/universal-apple-darwin/release/bundle/dmg/*.dmg
            client/src-tauri/target/release/bundle/**/*.*
            